import os
import sys
from datetime import datetime
from telethon.sync import TelegramClient
from telethon.tl.types import MessageMediaDocument
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

api_id = int(os.getenv("TELEGRAM_API_ID"))
api_hash = os.getenv("TELEGRAM_API_HASH")
phone = os.getenv("TELEGRAM_PHONE")
channel = sys.argv[1] if len(sys.argv) > 1 else None

if not channel:
    print("‚ùå –£–∫–∞–∂–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä:")
    print("   python3 download_docs.py https://t.me/example_channel")
    sys.exit(1)

# –ü–∞–ø–∫–∏ –∏ –ª–æ–≥
download_dir = "./downloads"
log_file_path = "download.log"
os.makedirs(download_dir, exist_ok=True)

client = TelegramClient("anon", api_id, api_hash)

def log(msg):
    timestamp = datetime.now().strftime("[%Y-%m-%d %H:%M:%S]")
    line = f"{timestamp} {msg}"
    print(line)
    with open(log_file_path, "a", encoding="utf-8") as f:
        f.write(line + "\n")

async def download_documents():
    await client.start(phone=phone)
    log(f"üîó –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏–∑ –∫–∞–Ω–∞–ª–∞: {channel}")

    count = 0
    skipped = 0

    async for message in client.iter_messages(channel):
        if message.media and isinstance(message.media, MessageMediaDocument):
            filename = message.file.name or f"{message.id}.pdf"

            if not filename.lower().endswith(".pdf"):
                continue

            save_path = os.path.join(download_dir, filename)

            if os.path.exists(save_path):
                log(f"‚è© –£–∂–µ –µ—Å—Ç—å: {filename}")
                skipped += 1
                continue

            log(f"üìÑ –°–∫–∞—á–∏–≤–∞–µ–º: {filename}")
            await client.download_media(message, save_path)
            count += 1

    log(f"‚úÖ –ì–æ—Ç–æ–≤–æ: —Å–∫–∞—á–∞–Ω–æ {count}, –ø—Ä–æ–ø—É—â–µ–Ω–æ {skipped}")

# –ó–∞–ø—É—Å–∫
with client:
    client.loop.run_until_complete(download_documents())
